/* autogenerated by Processing revision 1277 on 2022-01-10 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class stratch extends PApplet {



ArrayList< ball > balls;
float f = 40;
int f1 = Math.round(f);

  public void setup() {

    /* size commented out by preprocessor */;
    background(31, 29, 29);

    balls = new ArrayList<ball>();
}

 public void draw() {
    background(31, 29, 29);

    balls.clear();

    for(int i=0; i<700; i= i+f1){
        stroke(255, 255, 255);
        strokeWeight(0.1f);
        line(0+i, 0, 0+i, 700);
        line(0, 0+i, 700, 0+i);
    }

    for(int j = 0; j<700; j= j+f1){
        for(int i = 0; i<700; i = i+f1){
            balls.add(new ball(i, j,mouseX,mouseY,f));

        }
    }

    for(ball b: balls){
        b.show();
    }
}
class ball {

  float x;
  float y;
  float r;
  float mx;
  float my;
  float f;

    ball (float x_, float y_,float mx_,float my_,float f_) {
        x = x_;
        y = y_;
        f = f_;
        mx = mx_;
        my = my_; 

        double a = Math.pow(mx-x,2);
        double b = Math.pow(my-y,2);
        double c = Math.sqrt(a+b);

        double d = (c * 100)/989;
        double e = (d*f*3)/100;

        r = (float) e;

        //println(mx+";"+my);  
        //r = (((((Math.abs((y-my)+(x-mx)))/2)*100)/700) * f*1.5)/100;
        //println("(" + x +","+ y + ")" + "=" + r);
    }

     public void show() {
    stroke(0);
    fill(255, 255, 255);
    ellipse(x+f/2, y+f/2, 2*r, 2*r);
  }

}


  public void settings() { size(700, 700); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "stratch" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
